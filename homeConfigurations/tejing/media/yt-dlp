#! /usr/bin/env bash

set -euo pipefail

cachedir="$HOME/.cache/yt-dlp.latest"

# if "$cachedir/version" is more than 60 minutes old (or doesnt exist)
if [ ! -e "$cachedir/version" ] || [ $(stat -c '%Y' "$cachedir/version") -lt $((EPOCHSECONDS - 60*60)) ]; then
    curversion="$(cat "$cachedir/version" 2>/dev/null || true)"
    newversion="$(curl -sSLH 'Accept: application/vnd.github+json' 'https://api.github.com/repos/yt-dlp/yt-dlp/releases/latest' | jq -r '.tag_name')"
    if [ "$newversion" != "$curversion" ]; then
        srcargs="$(nix-prefetch-github --json --rev "$newversion" yt-dlp yt-dlp)"
        mkdir -p "$cachedir" 1>&2
        nix build --argstr version "$newversion" --argstr srcargs "$srcargs" -o "$cachedir/package" --impure --expr '
{version, srcargs}:
let
  inherit (builtins) getFlake fromJSON;
  pkgs = (getFlake "nixpkgs-unstable").legacyPackages.x86_64-linux;
in
pkgs.yt-dlp.overrideAttrs (old: {
  inherit version;
  src = pkgs.fetchFromGitHub (fromJSON srcargs);
})' 1>&2 && printf '%s\n' "$newversion" >"$cachedir/version"
    else
      touch "$cachedir/version"
    fi
fi

exec "$cachedir/package/bin/yt-dlp" "$@"
